{"version":3,"file":"static/js/980.9c4ded92.chunk.js","mappings":"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","sources":["app/courses/page.tsx","components/search-bar.tsx","components/dataItem.tsx","components/dataResultComponent.tsx","configs/blog/data.tsx"],"sourcesContent":["import { Data } from \"../../components/dataResultComponent\";\r\nimport { commonArgs } from \"../../configs/types\";\r\nimport BlogData from \"../../configs/blog/data\";\r\n\r\nexport default function Blog(props: commonArgs) {\r\n  return <Data slug={props.slug} data={BlogData} />;\r\n}\r\n","import { CiSearch } from \"react-icons/ci\";\r\n\r\nexport const SearchBar = ({\r\n  handleSearch,\r\n}: {\r\n  handleSearch: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n}) => {\r\n  return (\r\n    <div className=\"relative w-full sm:w-1/4\">\r\n      <CiSearch\r\n        className=\"absolute left-2 mt-2 text-gray-500 h-6 w-6\"\r\n        onClick={() => {\r\n          const search = document.getElementById(\"search\") as HTMLInputElement;\r\n          if (search) {\r\n            alert(search.value);\r\n          }\r\n        }}\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        placeholder={\"جست و جو\"}\r\n        className=\"rounded-md pl-10 pr-2 py-2 w-full bg-gray-200 text-gray-500 onfocus:bg-gray-100\"\r\n        id=\"search\"\r\n        onChange={handleSearch}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import { routes } from \"../configs/routes\";\r\nimport { BaseUri } from \"../configs/site\";\r\nimport { dataType } from \"../configs/types\";\r\nimport { useLang } from \"../hooks/langHook\";\r\nimport { useTheme } from \"../hooks/themeHook\"; // Import useTheme hook\r\n\r\nexport const DataItem: React.FC<dataType> = ({ data, slug }) => {\r\n  const { lang } = useLang();\r\n  const { theme } = useTheme(); // Get the theme state\r\n  let keylang = data.langs.find((item) => item.lang === lang);\r\n  if (!keylang) {\r\n    keylang = data.langs[0];\r\n  }\r\n\r\n  // Define classes based on theme\r\n  const containerClass = theme === \"light\" ? \"shadow-lg\" : \"shadow-dark\";\r\n  const textColorClass = theme === \"light\" ? \"text-black\" : \"text-white\";\r\n  const bgColorClass = theme === \"light\" ? \"bg-white\" : \"bg-gray-900\";\r\n\r\n  return (\r\n    <div\r\n      id={`data-item-${data.slug}`}\r\n      className={`${containerClass} rounded-sm p-6 ${bgColorClass}`} // Apply conditional classes\r\n    >\r\n      <a href={BaseUri + slug + \"/\" + data.slug} className=\"block w-full\">\r\n        {data.image !== \"\" && (\r\n          <div className=\"h-48 w-full \">\r\n            <img\r\n              src={data.image}\r\n              alt={keylang.title}\r\n              className=\"rounded-lg object-cover w-full h-full\"\r\n            />\r\n          </div>\r\n        )}\r\n        <div className=\"flex justify-between mt-4\">\r\n          <h6 className={`text-xl font-bold ${textColorClass}`}>\r\n            {keylang.title}\r\n          </h6>\r\n          <p className={`text-xs ${textColorClass}`}>{data.updated_at}</p>\r\n        </div>\r\n        <p className={`mt-2 ${textColorClass}`}>{keylang.description}</p>\r\n      </a>\r\n      <div className=\"mt-2 flex flex-row flex-wrap space-x-1 w-full\">\r\n        {data.tags.map((tag, index) => (\r\n          <span\r\n            key={index}\r\n            className={`p-1 rounded-md dark:bg-gray-700 bg-gray-200 rtl:space-x-reverse space-x-2 text-sm font-thin`}\r\n          >\r\n            <a href={BaseUri + routes.category.path + \"/\" + tag}>{\"#\" + tag}</a>\r\n          </span>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport { SearchBar } from \"../components/search-bar\";\r\nimport { resultType, Data as DataType } from \"../configs/types\";\r\nimport { DataItem } from \"./dataItem\";\r\nimport { useLang } from \"../hooks/langHook\";\r\n\r\nconst shownItemsPerPage = 12;\r\n\r\nconst filterData = (data: DataType[], searchText: string, lang: string) =>\r\n  data.filter((item) => {\r\n    let lang_data = item.langs.find((item) => item.lang === lang);\r\n    if (!lang_data) {\r\n      lang_data = item.langs[0];\r\n    }\r\n    return (\r\n      lang_data.title.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      lang_data.description.toLowerCase().includes(searchText.toLowerCase()) ||\r\n      item.tags.join(\" \").toLowerCase().includes(searchText.toLowerCase())\r\n    );\r\n  });\r\n\r\nexport const Data: React.FC<resultType> = (props) => {\r\n  const { lang } = useLang();\r\n  const [pageData, setPageData] = useState<DataType[]>([]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  // const [loading, setLoading] = useState(true);\r\n  const data = props.data;\r\n  useEffect(() => {\r\n    setPageData(data.slice(0, pageNumber * shownItemsPerPage));\r\n    // setLoading(false);\r\n  }, [data, pageNumber]);\r\n\r\n  const handleSearch = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const value = e.target.value;\r\n    setPageNumber(1);\r\n    const filteredData = filterData(data, value, lang);\r\n    setPageData(filteredData.slice(0, shownItemsPerPage));\r\n  };\r\n\r\n  useEffect(() => {\r\n    const handleObserver = (entries: IntersectionObserverEntry[]) => {\r\n      const target = entries[0];\r\n      if (target.isIntersecting) {\r\n        setPageNumber((prevPageNumber) => prevPageNumber + 1);\r\n      }\r\n    };\r\n\r\n    const options = {\r\n      root: null,\r\n      rootMargin: \"20px\",\r\n      threshold: 0,\r\n    };\r\n    const observer = new IntersectionObserver(handleObserver, options);\r\n    const target = document.getElementById(\"observer\");\r\n    if (target) {\r\n      observer.observe(target);\r\n    }\r\n    return () => {\r\n      observer.disconnect();\r\n    };\r\n  }, []);\r\n\r\n  // Define classes based on theme\r\n  return (\r\n    <div className=\"mt-20 m-8\">\r\n      <div className={`flex flex-row `}>\r\n        <SearchBar handleSearch={handleSearch} />\r\n      </div>\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4 mt-4\">\r\n        {pageData.map((item, index) => (\r\n          <DataItem key={index} data={item} slug={props.slug} />\r\n        ))}\r\n      </div>\r\n      <div id=\"observer\"></div>\r\n    </div>\r\n  );\r\n};\r\n","import { Data as DataType } from \"../types\";\r\nimport { langs as languages } from \"../langs\";\r\nconst Data: DataType[] = [\r\n  {\r\n    logo: \"/public/logo192.png\",\r\n    image:\r\n      \"https://www.researchgate.net/publication/312316454/figure/fig3/AS:614360300916768@1523486318839/Linear-Programming-optimization-framework-is-commonly-used-in-Constraint-based.png\",\r\n    langs: [\r\n      {\r\n        lang: languages.en.short,\r\n        title: \"Introduction to React Hooks\",\r\n        description:\r\n          \"Learn how to use React Hooks for state management and side effects.\",\r\n        data: (\r\n          <p>React Hooks revolutionized the way we write React components...</p>\r\n        ),\r\n      },\r\n      {\r\n        lang: languages.fa.short,\r\n        title: \"معرفی هوک‌های React\",\r\n        description:\r\n          \"یاد بگیرید که چگونه از هوک‌های React برای مدیریت وضعیت و اثرات جانبی استفاده کنید.\",\r\n        data: (\r\n          <p>هوک‌های React شیوه‌ی نوشتن ما را به طور کامل تغییر دادند...</p>\r\n        ),\r\n      },\r\n    ],\r\n    slug: \"introduction-to-react-hooks\",\r\n    related_posts: [\"react-context-api\", \"react-performance-optimization\"],\r\n    tags: [\"React\", \"Hooks\", \"Frontend Development\"],\r\n    category: [\"Web Development\", \"Frontend\"],\r\n    created_at: \"2023-09-15\",\r\n    updated_at: \"2023-10-02\",\r\n  }\r\n];\r\n\r\nexport default Data;\r\n"],"names":["Blog","props","_jsx","Data","slug","data","BlogData","SearchBar","_ref","handleSearch","_jsxs","className","children","CiSearch","onClick","search","document","getElementById","alert","value","type","placeholder","id","onChange","DataItem","lang","useLang","theme","useTheme","keylang","langs","find","item","containerClass","textColorClass","bgColorClass","concat","href","BaseUri","image","src","alt","title","updated_at","description","tags","map","tag","index","routes","category","path","pageData","setPageData","useState","pageNumber","setPageNumber","useEffect","slice","observer","IntersectionObserver","entries","isIntersecting","prevPageNumber","root","rootMargin","threshold","target","observe","disconnect","e","filteredData","filterData","searchText","filter","lang_data","toLowerCase","includes","join","logo","languages","en","short","fa","related_posts","created_at"],"sourceRoot":""}